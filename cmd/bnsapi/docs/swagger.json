{
    "swagger": "2.0",
    "info": {
        "title": "BNSAPI documentation",
        "contact": {},
        "license": {}
    },
    "paths": {
        "/blocks/{blockHeight}": {
            "get": {
                "description": "get block detail by blockHeight",
                "summary": "Get block details by height",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Block Height",
                        "name": "blockHeight",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "404": {}
                }
            }
        },
        "/cash/balances": {
            "get": {
                "summary": "returns balances based on iov address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bech32 or hex representation of an address",
                        "name": "address",
                        "in": "path"
                    },
                    {
                        "type": "string",
                        "description": "Bech32 or hex representation of an address to be used as offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {},
                    "404": {},
                    "500": {}
                }
            }
        },
        "/escrow/escrows": {
            "get": {
                "description": "At most one of the query parameters must exist(excluding offset)",
                "summary": "Returns a list of x/escrow Escrow entities.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Iteration offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Source address",
                        "name": "source",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Destination address",
                        "name": "destination",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {},
                    "404": {},
                    "500": {}
                }
            }
        },
        "/gconf/{extensionName}": {
            "get": {
                "summary": "Get configuration with extension name",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Extension name",
                        "name": "extensionName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "404": {},
                    "500": {}
                }
            }
        },
        "/info/": {
            "get": {
                "summary": "Returns information about this instance of `bnsapi`.",
                "responses": {
                    "200": {}
                }
            }
        },
        "/multisig/contracts": {
            "get": {
                "description": "At most one of the query parameters must exist(excluding offset)",
                "summary": "Returns a list of multisig Contract entities.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Iteration offset",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {},
                    "404": {},
                    "500": {}
                }
            }
        },
        "/username/owner/{ownerAddress}": {
            "get": {
                "summary": "Returns the list of iov starname owned by this iov address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bech32 or hex representation of an address",
                        "name": "ownerAddress",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/username.Token"
                        }
                    },
                    "404": {},
                    "500": {}
                }
            }
        },
        "/username/resolve/{username}": {
            "get": {
                "summary": "Returns balances based on iov address.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username. example: bob*iov",
                        "name": "username",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/username.Token"
                        }
                    },
                    "404": {},
                    "500": {}
                }
            }
        }
    },
    "definitions": {
        "username.BlockchainAddress": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "An address on the specified blockchain network. Address is not a\nweave.Address as we cannot know what is the format of an address on the\nchain that this token instance links to. Because we do not know the rules\nto validate an address for any blockchain ID, this is an arbitrary bulk of\ndata.\nIt is more convinient to always use encoded representation of each address\nand store it as a string. Using bytes while compact is not as comfortable\nto use.",
                    "type": "string"
                },
                "blockchain_id": {
                    "description": "An arbitrary blockchain ID.",
                    "type": "string"
                }
            }
        },
        "username.Token": {
            "type": "object",
            "properties": {
                "metadata": {
                    "type": "object",
                    "$ref": "#/definitions/weave.Metadata"
                },
                "owner": {
                    "description": "Owner is a weave.Address that controls this token. Only the owner can\nmodify a username token.",
                    "type": "object",
                    "$ref": "#/definitions/weave.Address"
                },
                "targets": {
                    "description": "Targets specifies where this username token points to. This must be at\nleast one blockchain address elemenet.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/username.BlockchainAddress"
                    }
                }
            }
        },
        "weave.Address": {
            "type": "array",
            "items": {
                "type": "integer"
            }
        },
        "weave.Metadata": {
            "type": "object",
            "properties": {
                "schema": {
                    "type": "integer"
                }
            }
        }
    }
}