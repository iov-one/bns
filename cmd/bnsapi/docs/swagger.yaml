definitions:
  json.RawMessage:
    items:
      type: integer
    type: array
  username.Token:
    properties:
      metadata:
        type: string
      owner:
        type: string
      targets:
        items:
          type: BlockchainAddress
        type: array
    type: object
info:
  contact: {}
  license: {}
  title: BNSAPI documentation
paths:
  /account/accounts:
    get:
      description: At most one of the query parameters must exist(excluding offset)
      parameters:
      - description: HostPort name
        in: query
        name: domainKey
        type: string
      - description: Admin address
        in: query
        name: ownerKey
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/json.RawMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/json.RawMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/json.RawMessage'
      summary: Returns a list of `bnsd/x/account` Account entitiy.
      tags:
      - Starname
  /account/accounts/{accountKey}:
    get:
      description: |-
        The list is either the list of all usernames for a given *starname, or the list of all *starnames for a given owner.
        The owner address may be in the bech32 (iov....) or hex (ON3LK...) format.
      parameters:
      - description: Address of the admin
        in: path
        name: accountKey
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/json.RawMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/json.RawMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/json.RawMessage'
      summary: Returns a list of `bnsd/x/account` which are the username*starnames.
      tags:
      - Starname
  /account/domains/:
    get:
      description: |-
        Returns the list of all starnames for a given iov address.
        The owner address may be in the bech32 (iov....) or hex (ON3LK...) format.
      parameters:
      - description: Address of the admin
        in: query
        name: admin
        type: string
      - description: Iteration offset
        in: query
        name: offset
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/json.RawMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/json.RawMessage'
      summary: Returns a list of `bnsd/x/account` starnames entities.
      tags:
      - Starname
  /blocks/{blockHeight}:
    get:
      description: get block detail by blockHeight
      parameters:
      - description: Block Height
        in: path
        name: blockHeight
        required: true
        type: integer
      responses:
        "200": {}
        "404": {}
      summary: Get block details by height
      tags:
      - Status
  /cash/balances:
    get:
      description: The iov address may be in the bech32 (iov....) or hex (ON3LK...)
        format.
      parameters:
      - description: Bech32 or hex representation of an address
        in: path
        name: address
        type: string
      - description: Bech32 or hex representation of an address to be used as offset
        in: query
        name: offset
        type: string
      responses:
        "200": {}
        "404": {}
        "500": {}
      summary: returns balance in IOV Token of the given iov address
      tags:
      - IOV token
  /escrow/escrows:
    get:
      description: At most one of the query parameters must exist(excluding offset)
      parameters:
      - description: Iteration offset
        in: query
        name: offset
        type: string
      - description: Source address
        in: query
        name: source
        type: string
      - description: Destination address
        in: query
        name: destination
        type: string
      responses:
        "200": {}
        "400": {}
        "404": {}
        "500": {}
      summary: Returns a list of all the smart contract Escrows.
      tags:
      - IOV token
  /gconf/{extensionName}:
    get:
      parameters:
      - description: Extension name
        in: path
        name: extensionName
        required: true
        type: string
      responses:
        "200": {}
        "404": {}
        "500": {}
      summary: Get configuration with extension name
      tags:
      - Status
  /gov/proposals:
    get:
      description: At most one of the query parameters must exist(excluding offset)
      parameters:
      - description: Author address
        in: query
        name: author
        type: string
      - description: Base64 encoded electorate ID
        in: query
        name: electorate
        type: string
      - description: Base64 encoded Elector ID
        in: query
        name: elector
        type: string
      - description: Elector ID
        in: query
        name: electorID
        type: integer
      responses:
        "200": {}
        "400": {}
        "404": {}
        "500": {}
      summary: Returns a list of x/gov Votes entities.
      tags:
      - Governance
  /gov/votes:
    get:
      description: At most one of the query parameters must exist(excluding offset)
      parameters:
      - description: Base64 encoded Proposal ID
        in: query
        name: proposal
        type: string
      - description: Proposal ID
        in: query
        name: proposalID
        type: integer
      - description: Base64 encoded Elector ID
        in: query
        name: elector
        type: string
      - description: Elector ID
        in: query
        name: electorID
        type: integer
      responses:
        "200": {}
        "400": {}
        "404": {}
        "500": {}
      summary: Returns a list of Votes made on the governance.
      tags:
      - Governance
  /info/:
    get:
      responses:
        "200": {}
      summary: Returns information about this instance of `bnsapi`.
      tags:
      - Status
  /multisig/contracts:
    get:
      description: At most one of the query parameters must exist(excluding offset)
      parameters:
      - description: Iteration offset
        in: query
        name: offset
        type: string
      responses:
        "200": {}
        "404": {}
        "500": {}
      summary: Returns a list of all the multisig Contracts.
      tags:
      - IOV token
  /termdeposit/contracts:
    get:
      description: The term deposit Contract are the contract defining the dates until
        which one can deposit.
      parameters:
      - description: Iteration offset
        in: query
        name: offset
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/json.RawMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/json.RawMessage'
        "500": {}
      summary: Returns a list of bnsd/x/termdeposit Contract entities.
      tags:
      - IOV token
  /termdeposit/deposits:
    get:
      description: |-
        At most one of the query parameters must exist (excluding offset).
        The query can be made by Depositor, in which case it returns all the deposits from the Depositor.
        The query can be made by Deposit Contract, in which case it returns all the deposits from this Contract.
        The query can be made by Contract ID, in which case it returns the deposits from the Deposit Contract with this ID.
      parameters:
      - description: Depositor address
        in: query
        name: depositor
        type: string
      - description: Base64 encoded ID
        in: query
        name: contract
        type: string
      - description: Contract ID as integer
        in: query
        name: contract_id
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/json.RawMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/json.RawMessage'
        "500": {}
      summary: Returns a list of bnsd/x/termdeposit Deposit entities.
      tags:
      - IOV token
  /username/owner/{ownerAddress}:
    get:
      description: The iov address may be in the bech32 (iov....) or hex (ON3LK...)
        format.
      parameters:
      - description: Bech32 or hex representation of an address
        in: path
        name: ownerAddress
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/username.Token'
        "404": {}
        "500": {}
      summary: Returns the list of iov username (like bob*iov) owned by this iov address.
      tags:
      - Starname
  /username/resolve/{username}:
    get:
      parameters:
      - description: 'username. example: bob*iov'
        in: path
        name: username
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/username.Token'
        "404": {}
        "500": {}
      summary: Returns the username object with associated info for an iov username,
        like bob*iov
      tags:
      - Starname
swagger: "2.0"
