definitions:
  json.RawMessage:
    items:
      type: integer
    type: array
  username.BlockchainAddress:
    properties:
      address:
        description: |-
          An address on the specified blockchain network. Address is not a
          weave.Address as we cannot know what is the format of an address on the
          chain that this token instance links to. Because we do not know the rules
          to validate an address for any blockchain ID, this is an arbitrary bulk of
          data.
          It is more convinient to always use encoded representation of each address
          and store it as a string. Using bytes while compact is not as comfortable
          to use.
        type: string
      blockchain_id:
        description: An arbitrary blockchain ID.
        type: string
    type: object
  username.Token:
    properties:
      metadata:
        $ref: '#/definitions/weave.Metadata'
        type: object
      owner:
        $ref: '#/definitions/weave.Address'
        description: |-
          Owner is a weave.Address that controls this token. Only the owner can
          modify a username token.
        type: object
      targets:
        description: |-
          Targets specifies where this username token points to. This must be at
          least one blockchain address elemenet.
        items:
          $ref: '#/definitions/username.BlockchainAddress'
        type: array
    type: object
  weave.Address:
    items:
      type: integer
    type: array
  weave.Metadata:
    properties:
      schema:
        type: integer
    type: object
info:
  contact: {}
  license: {}
  title: BNSAPI documentation
paths:
  /account/accounts:
    get:
      description: At most one of the query parameters must exist(excluding offset)
      parameters:
      - description: HostPort name
        in: query
        name: domainKey
        type: string
      - description: Admin address
        in: query
        name: ownerKey
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/json.RawMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/json.RawMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/json.RawMessage'
      summary: Returns a list of `bnsd/x/account` Account entitiy.
  /account/accounts/{accountKey}:
    get:
      parameters:
      - description: Address of the admin
        in: path
        name: accountKey
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/json.RawMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/json.RawMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/json.RawMessage'
      summary: Returns a list of `bnsd/x/account` Account entitiy.
  /account/domains/:
    get:
      parameters:
      - description: Address of the admin
        in: query
        name: admin
        type: string
      - description: Iteration offset
        in: query
        name: offset
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/json.RawMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/json.RawMessage'
      summary: Returns a list of `bnsd/x/account` HostPort entities.
  /blocks/{blockHeight}:
    get:
      description: get block detail by blockHeight
      parameters:
      - description: Block Height
        in: path
        name: blockHeight
        required: true
        type: integer
      responses:
        "200": {}
        "404": {}
      summary: Get block details by height
  /cash/balances:
    get:
      parameters:
      - description: Bech32 or hex representation of an address
        in: path
        name: address
        type: string
      - description: Bech32 or hex representation of an address to be used as offset
        in: query
        name: offset
        type: string
      responses:
        "200": {}
        "404": {}
        "500": {}
      summary: returns balances based on iov address
  /escrow/escrows:
    get:
      description: At most one of the query parameters must exist(excluding offset)
      parameters:
      - description: Iteration offset
        in: query
        name: offset
        type: string
      - description: Source address
        in: query
        name: source
        type: string
      - description: Destination address
        in: query
        name: destination
        type: string
      responses:
        "200": {}
        "400": {}
        "404": {}
        "500": {}
      summary: Returns a list of x/escrow Escrow entities.
  /gconf/{extensionName}:
    get:
      parameters:
      - description: Extension name
        in: path
        name: extensionName
        required: true
        type: string
      responses:
        "200": {}
        "404": {}
        "500": {}
      summary: Get configuration with extension name
  /info/:
    get:
      responses:
        "200": {}
      summary: Returns information about this instance of `bnsapi`.
  /multisig/contracts:
    get:
      description: At most one of the query parameters must exist(excluding offset)
      parameters:
      - description: Iteration offset
        in: query
        name: offset
        type: string
      responses:
        "200": {}
        "404": {}
        "500": {}
      summary: Returns a list of multisig Contract entities.
  /termdeposit/contracts:
    get:
      description: At most one of the query parameters must exist(excluding offset)
      parameters:
      - description: Iteration offset
        in: query
        name: offset
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/json.RawMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/json.RawMessage'
        "500": {}
      summary: Returns a list of bnsd/x/termdeposit Contract entities.
  /termdeposit/deposits:
    get:
      description: At most one of the query parameters must exist(excluding offset)
      parameters:
      - description: Depositor address
        in: query
        name: depositor
        type: string
      - description: Base64 encoded ID
        in: query
        name: contract
        type: string
      - description: Contract ID as integer
        in: query
        name: contract_id
        type: integer
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/json.RawMessage'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/json.RawMessage'
        "500": {}
      summary: Returns a list of bnsd/x/termdeposit Deposit entities.
  /username/owner/{ownerAddress}:
    get:
      parameters:
      - description: Bech32 or hex representation of an address
        in: path
        name: ownerAddress
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/username.Token'
        "404": {}
        "500": {}
      summary: Returns the list of iov starname owned by this iov address
  /username/resolve/{username}:
    get:
      parameters:
      - description: 'username. example: bob*iov'
        in: path
        name: username
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/username.Token'
        "404": {}
        "500": {}
      summary: Returns balances based on iov address.
swagger: "2.0"
